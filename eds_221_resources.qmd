---
title: "EDS212_Resource_Document"
format: html
editor: visual
Execute:
  warning:false
  message:false
---

# Quarto

see initial chunk for info on excluding warnings and messages

```{r}
#| fig-height: 5 
#| fig-width : 4
#these set the width of figures in output
library(here)
library(tidyverse)
library(janitor)
library(dplyr)
```

# Terminal

The terminal in R studio is the same as the terminal outside r studio.

Navigate to a folder that is version controlled and you can use git commands.

-   Git Add -A

-   Git commit -m "important message"

-   git push

-   git status

pwd

-   tells you where you are

cd ..

-   will take you back up one

ls

-   list all files

cd

-   sets working directory

# Pipe Operator

%\>% pipe operator or \|\>

-   basically means and then, allows you to write code in the order you think about it.

-   command shift m- shortcut

# Working With Files & Tidy Data

## Here

Here Package: much better option than using working directory

## Importing and Exporting Files + Data Tidying

add file paths starting from here location

```{r}
# import and fix the names
blood_lead <- read_csv(here("data","stl_blood_lead.csv" )) %>% clean_names() #automatically makes names lowercase
#make a new column
blood_lead_pov <- mutate(blood_lead, 
                         new_col = poverty_tot/total_pop *100)
#Graph a plot
lead_poverty_plot <- ggplot(data = blood_lead_pov, aes(x = pct_elevated, y = new_col)) + geom_point(color = "pink") +labs(x = "percent of population in poverty", y = "Percent of population with elevated blood levels")
lead_poverty_plot
#save the file in the project
ggsave(plot = lead_poverty_plot, here("figs","lead_plot.png"), width = 4, height = 4)
```

## mutating and filtering data 

Dataset from: ["https://portal.edirepository.org/nis/mapbrowse?packageid=knb-lter-and.4027.14"]("https://portal.edirepository.org/nis/mapbrowse?packageid=knb-lter-and.4027.14")

```{r}
#import dataset and clean names 
aquatic_dataset <- read_csv(here("data", "AS00601.csv")) %>% clean_names()

#Filter for cutthroat 
cutthroat_dataset <- mutate(aquatic_dataset, species = "ONCL")
#graph
ggplot(cutthroat_dataset, aes(x = unittype)) +geom_bar(color = "green", fill = "yellow") + labs( Title = "Unit Types for Cuthroat", x= "Unit Type", y ="Count")

```

# Data Structures

## atomic vector

when you combine data types in an atomic vector, will get converted to most flexible

1\) logical

2\) integer

3\) double

4)character (most flexible)

```{r}
turtle <- c(TRUE, 4.5, 8L)
turtle
class(turtle)
#converts all to numeric
```

## List

a lot like a vector but different data types

good for outputs of models, so you can pull out individual items

```{r}
waffle <- list("dog", 21.5, "brown", 2L)
waffle
class(waffle)
```

## Matrix

2 dimensional, only one data type

```{r}


```

## data frames

most commonly used, stores the data you have read in

2D and can have multiple data types

```{r}

```

## building data frame using tribble 
